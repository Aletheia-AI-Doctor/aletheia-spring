services:
  app:
    build: .
    container_name: ai_doctor_container
    ports:
      - "8080:9000"
    depends_on:
      - db
    env_file:
      - .env
    networks:
      - app-network

  frontend:
    build:
      context: ./src/main/frontend
      dockerfile: Dockerfile
      target: development
    container_name: react_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./src/main/frontend:/app  # Mount source code for hot-reload
      - /app/node_modules/  # Isolate node_modules from host
    environment:
      - NODE_ENV=development
      - VITE_APP_SERVER_URL=http://app:8080
    depends_on:
      - app
    networks:
      - app-network

  python_models:
    build:
      context: ./src/main/models
      dockerfile: Dockerfile
    container_name: python_models
    ports:
      - "5000:5000"
    networks:
      - app-network

  db:
    image: mysql:8
    container_name: mysql_db
    restart: always
    environment:
      DATABASE_ROOT_PASSWORD: root
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    env_file:
      - .env
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge